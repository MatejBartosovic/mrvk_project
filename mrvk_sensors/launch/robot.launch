<?xml version="1.0"?>
<launch>

    <arg name="vo_used" default="false" />
    <arg name="use_camera" default="false" />
    <arg name="use_gps" default="false" />
    <arg name="use_imu" default="true"/>
    <arg name="use_gmapping" default="true"/>
    <arg name="use_ekf" default="true"/>
    <arg name="use_joint_states_publisher" default="true"/>
    <arg name="filter_config_path" default="$(find mrvk_laser_filters)/config/laser_filters_default.yaml"/>

    <!--run driver-->
    <include file="$(find mrvk_driver)/launch/driver.launch" >
        <arg name="off_map_tf" value="$(arg use_gmapping)" />
        <arg name="off_odom_tf" value="$(arg use_ekf)" />
        <arg name="use_joint_states_publisher" value="$(arg use_joint_states_publisher)"/>
        <arg name="model" value="$(find mrvk_sensors)/urdf/robot.xacro"/>
    </include>

    <!--run hokuyo node-->
    <include file="$(find mrvk_laser_filters)/launch/filter_with_lidar.launch">
	<arg name="filter_config_path" value="$(arg filter_config_path)" />
    </include>

    <!--run camera-->
    <include file="$(find mrvk_sensors)/launch/camera.launch" if="$(arg use_camera)"/>

    <!--run gps-->
    <include file="$(find mrvk_sensors)/launch/gps.launch" if="$(arg use_gps)"/>

    <!--run adis node-->
    <include file="$(find adis16488)/launch/adis_driver.launch" if="$(arg use_imu)"/>
    <!--include file="$(find adis16350)/launch/adis_driver.launch" if="$(arg use_imu)"/-->

    <!--run robot pose ekf node-->
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" if="$(arg use_ekf)">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="base_link"/>
        <param name="freq" value="30.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="true"/>
        <param name="imu_used" value="true"/>
        <param name="vo_used" value="$(arg vo_used)"/>
        <remap from="imu_data" to="/adis16488/imu_data" if="$(arg use_imu)"/>
    </node>

    <!--run gmapping node-->
    <node name="gmapping" pkg="gmapping" type="slam_gmapping" if="$(arg use_gmapping)">
        <remap from="/scan" to="/scan_filtered"/>
        <param name="base_frame" value="base_link"/>
        <param name="map_frame" value="map"/>
        <param name="odom_frame" value="odom"/>
        <param name="maxUrange" value="4.0"/> <!--default 80.0-->
        <param name="transform_publish_period" value="0.05"/> <!--default 0.05-->

        <param name="map_update_interval" value="5"/> 	<!--default 5-->
        <param name="throttle_scans" value="1"/> 	<!--default 1 Process 1 out of every this many scans (set it to a higher number to skip more scans) -->

        <param name="lstep" value="0.05"/> <!--default 0.05-->
        <param name="astep" value="0.05"/> <!--default 0.05-->
        <param name="iterations" value="5"/> <!--default 5 The number of iterations of the scanmatcher -->
        <param name="minimumScore" value="0.0"/> <!--default 0.0-->
        <param name="particles" value="30"/> <!--default 30 Number of particles in the filter -->

        <!-- srr odometry errors-->
        <param name="srr" value="0.1"/> <!--default 0.1 translation as a function of translation-->
        <param name="srt" value="0.2"/> <!--default 0.2 translation as a function of rotation-->
        <param name="str" value="0.1"/> <!--default 0.1 rotation as a function of translation-->
        <param name="stt" value="0.2"/> <!--default 0.2 rotation as a function of rotation-->

        <param name="linearUpdate" value="1.0"/> <!--default 1.0 Process a scan each time the robot translates this far -->
        <param name="angularUpdate" value="0.5"/> <!--default 0.5 Process a scan each time the robot rotates this far -->
        <param name="temporalUpdate" value="10.0"/> <!--default -1.0 Process a scan if the last scan processed is older than the update time in seconds. A value less than zero will turn time based updates off. -->

        <param name="xmin" value="-100"/> <!--default -100-->
        <param name="ymin" value="-100"/> <!--default -100-->
        <param name="xmax" value="100"/> <!--default 5-->
        <param name="ymax" value="100"/> <!--default 5-->

    </node>

    <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find mrvk_driver)/mapping.rviz" required="true" /-->

</launch>
